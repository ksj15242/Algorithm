class RandomizedSet {
    unordered_map<int, int> um;
    vector<int> vec;

public:
    bool insert(int val) {
        if (um.find(val) != um.end())
            return false;

        um[val] = vec.size();
        vec.push_back(val);

        return true;
    }

    bool remove(int val) {
        auto it = um.find(val);
        if (it == um.end())
            return false;

        int lastVal = vec.back();
        int idx = it->second;

        vec[idx] = lastVal;
        um[lastVal] = idx;

        vec.pop_back();
        um.erase(it);

        return true;
    }

    int getRandom() {
        int idx = rand() % vec.size();
        return vec[idx];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
